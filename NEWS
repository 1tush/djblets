version 0.5.8 final (27-March-2010):
	* djblets.datagrid:
		* Made many more speed improvements in the datagrids.

		  This builds upon the previous set of improvements.

		  We now parse and cache the cell and header templates before any
		  rendering is done, instead of doing it once per cell.

		  We also cache cells by their displayed content, so that two cells
		  that would show the same rendered data will only render once.
		  This is especially useful for cells showing such things as
		  usernames.

		  This can easily take seconds off the load of a heavy datagrid.

		* Objects in the datagrid with custom primary keys that aren't named
		  'id' now work.

		* The Edit Columns icon is now a pencil instead of just "...', making
		  it easier to see it and figure out its purpose. (Bug #910)

	* djblets.feedview:
		* The feedparser library is now only imported when needed. This
		  reduces startup time for requests by as much as a quarter of a
		  second, as feedparser is a very large library and takes time to
		  import.

		  This should improve performance for any site that at all lists
		  djblets.feedview in INSTALLED_APPS, even for pages not making use
		  of feedview.

	* djblets.siteconfig:
		* The stale settings issue appears to be fixed in this release. It
		  needs more testing in large deployments, but we've identified a
		  couple cases that would cause this problem and have fixed them.

		* The mail authentication information is now saved as plain strings
		  instead of unicode strings in order to fix a compatibility issue
		  with Python 2.6's HMAC library.

		* The SiteConfiguration's settings field is now read-only in the
		  Django administration UI in Django 1.2.

	* djblets.webapi:
		* WebAPIErrors can now take HTTP status codes that will be sent to
		  the browser. These default to 400, though the built-in errors may
		  define different codes.

		  This change does break backwards-compatibility if a client calling
		  the API makes the assumption that every result with a payload will
		  be an HTTP 200 OK. Clients shouldn't make these assumptions, but
		  it's possible that they do.

		* Added support for Basic HTTP Authentication.

		  Clients making a call when not logged in to a restricted URL will
		  now get an HTTP 401 Unauthorized, along with a WWW-Authentication
		  header specifying that Basic Auth is to be used.

		  Clients can use standard Basic Auth to pass credentials to any
		  URL requiring such authorization in order to log in. This removes
		  the need for special login URLs.

		  This makes APIs more accessible to applications like wget or
		  curl.

		* Added an easy way to do pagination with the web API.

		  API calls returning lists of data can now paginate the results,
		  returning only a certain amount of data. The results and the
		  total number of items across all pages will be returned.

		  URLs are provided in the resulting JSON payload that point to the
		  previous or next queries. Callers can pass a 'start' parameter to
		  the URL to specify the first item's index (0-based), and
		  'max-results' to specify the maximum number of items it wants in
		  that request (which may be capped server-side).


version 0.5.7 final (14-February-2010):
	* djblets.datagrid:
		* Columns in datagrids can now augment the queryset before actually
		  querying the database. This allows them to prefetch information
		  instead of having to do a query per-row.

		  This also now by default globally caches the resulting data in
		  Column.render_data if displaying a foreign key. This means that if
		  several rows are all referencing the same User object, for instance,
		  there will be only one query for that object instead of one per row.

	* djblets.log:
		* Add a title to the Server Log page.

	* djblets.util:
		* Fixed image cropping with the new Django storage support.

		  Python Image Library was confused about the format to save the
		  resulting image in when cropping. We now pass in the appropriate
		  format in order to allow it to save. We also log any failures that
		  may come up. (Bug #1396)

	* JavaScript:
		* Allow the classes in modalBox to be customized on a per-instance
		  basis, allowing for more custom types of modalBoxes (such as a
		  specially stylized help box). Patch by Hussain Bohra.

		* Added a new $.fn.scrollIntoView function. This will ensure that the
		  target element is visible on-screen.


version 0.5.6 final (15-November-2009):
	* djblets.auth:
		* RegistrationForm now takes in a request.
		* Extra context can be passed to the template for the registration
		  form.


version 0.5.5 final (22-October-2009):
	* JavaScript:
		* Fix a bug on Internet Explorer when setting the white-space
		  property on an auto-size text area. (Bug #1349)


version 0.5.4 final (4-October-2009):
	* djblets.datagrid:
		* Compatibility updates for the Django 1.2 development branch.

	* JavaScript:
		* On Google Chrome, the text areas would grow by a line with every key
		  pressed. Patch by Cory McWilliams. (Bug #1145)

		* On Safari 4, the text areas wouldn't auto-resize based on text.

		* On Firefox, the text areas would shrink too much when deleting text.


version 0.5.3 final (17-September-2009):
	* djblets.siteconfig:
		* Updated to work with Django 1.1's admin UI stylesheets.


version 0.5.2 final (15-September-2009):
	* General:
		* Added copyright and MIT license headers to all files.

	* JavaScript:
		* inlineEditors now prevent the event from bubbling up when
		  clicking their target element. This means that a target element
		  inside of an <a href="..."> will no longer cause the page to
		  change when clicking the element. (Bug #1221)

	* djblets.auth:
		* Deleted the password recovery code. It was intended for use in
		  an old version of Django and has since been supplanted by
		  Django. We don't believe anyone is using it or should be
		  encouraged to use it.

	* djblets.log:
		* Added a Server Log view for administration UIs. This is used
		  to display the server log (using the Python logging defaults from
		  djblets.log). The log is filterable and sortable.

		* Exceptions are now logged when using LoggingMiddleware. When an
		  exception occurs, the stack, username and URL are logged.

	* djblets.util.misc:
		* cache_memoize will now always ensure that cache keys will never
		  exceed the maximum key length. If the key is larger, an md5sum
		  of the key is used instead. Patch by Thilo-Alexander Ginkel.


version 0.5.1 final (2-August-2009):
	* JavaScript:
		* Added a clear() function to $.funcQueue(), which clears the
		  queue and prevents any further processing until it's next started.

	* djblets.util.filesystem:
		* Added the new djblets.util.filesystem for filesystem-related
		  functionality.

		* This currently contains is_exe_in_path, which checks if an
		  executale exists in the system path. This will do intelligent
		  file extension determination. It expects an application name without
		  a file extension (such as "cvs") and will append the ".exe" on
		  Windows. This is an improvement over the method we used in Review
		  Board before where we blindly searched for "cvs" (which could in
		  theory exist yet not be an executable) on Windows, or "cvs.exe"
		  (which could in theory exist yet not be an executable) on Linux.


version 0.5 final (20-June-2009):
	* Final release of Djblets 0.5.

	  This release was made to go alongside Review Board 1.0. While Djblets
	  works its way to its own 1.0, we will attempt to not break any existing
	  API. However, it is important to note that Djblets is not API frozen
	  at all yet.

	  We advise developers to continue to work against Djblets SVN/nightlies,
	  but to base production applications on 0.5.


version 0.5 rc2 (13-June-2009):
	* General:
		* Properly list the license as MIT, not GPL, in setup.py.
		  (Bug #1120)

	* JavaScript:
		* Prevent funcQueue.start() from being called when the queue is
		  already started.

	* djblets.datagrid:
		* Added speedups when sorting columns. We used to generate an SQL
		  query that pulled in all information in the order specified by
		  the columns, but this could be slow for large data sets. We now
		  do the minimal query, retrieving only the object IDs, and then
		  fetch data on those specific IDs in a second query. The end result
		  is a significant speedup in rendering datagrids when used with
		  large amounts of data.

	* djblets.log:
		* Fix logging when we're unable to write to the log file. We now
		  fall back on stderr. Patch by Paolo Borelli.

	* djblets.util.fields:
		* Fixed a typo in a variable name that caused problems in JSONField
		  when getting data in an unexpected format.


version 0.5 rc1 (3-May-2009):
	* JavaScript:
		* Clicking the edit icons for inlineEditors no longer causes the
		  page to scroll in some browsers. (Bug #1057)

	* djblets.datagrids:
		* Sped up the datagrids in some cases by always including related
		  objects (up to one depth level) in the query for the datagrid.

	* djblets.siteconfig:
		* Prepended the site's domain to the siteconfig cache key, making it
		  possible to use multiple siteconfig-based apps on the same server.
		  (Bug #986)

		* Saving a SiteConfig didn't always cause other instances of that
		  SiteConfig on the server to reload, meaning that people would
		  sometimes have to restart the server to get settings to apply.
		  This is now fixed.
		  (Bug #734)

		* Removed a redundant key for the timezone.

	* djblets.util.templatetags.djblets_utils:
		* The ageid filter now returns an empty string if passed 'None' as
		  the timestamp.


version 0.5 beta 1 (28-March-2009):
	* JavaScript:
		* Moved to using jQuery 1.3.2.

		* Small performance improvements in tooltip and modalBox.

		* The edit icons in an inlineEditor are now accessible, so they can
		  be activated by pressing the Enter key in Firefox. Patch by
		  Brad Taylor. (Bug #965)

	* djblets.util.fields:
		* JSONField and Base64Field now properly serialize to a JSON file,
		  so long as the patch at http://code.djangoproject.com/ticket/9522
		  is applied.

		* Objects saved in the admin UI that have a Base64Field no longer
		  causes garbage in the field. The fields are now saved properly.
		  (Bug #918)

	* djblets.gravatars:
		* Added an "alt" attribute for the generated gravatar image, in order
		  to fix XHTML compliance.

	* djblets.datagrids:
		* Fixed some XHTML validation errors. Patch by Onkar Shinde.
		  (Bug #932)


version 0.5 alpha 3 (15-February-2009):
	* JavaScript Bugs Fixed:
		* Fixed some major performance issues in autoSizeTextArea.

		* Fixed a bug with Safari and inlineEditor where Safari would
		  sometimes crash due to autoSizeTextArea. We now just disable
		  the autoSizeTextArea functionality.

		* inlineEditor no longer allows startEdit to be called when editing
		  is already enabled.

	* New Features:
		* Added new set_etag, etag_if_none_match, etag_if_match functions
		  for working with ETags.

		* Added a new jQuery.fn.html() method that works around IE's broken
		  innerHTML implementation. innerHTML in IE would strip whitespace,
		  which was bad when inserting into <pre> and <textarea> tags.



version 0.5 alpha 2 (3-February-2009):
	* JavaScript:
		* We now include and require jQuery 1.3.1 and jQueyr-ui 1.6rc5.

		* Added support for starting an inlineEditor in the opened state,
		  and prevent animations when starting or forcing it to be open.

		* Disabled keypress propagation for inlineEditor. This fixes a bug
		  in Review Board's diff viewer (bug #838).

	* djblets.gravatars (new):
		* Added basic support for gravatars. This provides a {% gravatars %}
		  template tag for displaying a gravatar based on a User object.
		  See http://www.gravatar.com/ for more information on Gravatars.

	* djblets.util:
		* Added a {% include_as_string %} tag for including a template
		  as a JavaScript string.

		* Added the ability to generate media and AJAX serial numbers based
		  on the media files and template files. These can be appended to
		  the media and AJAX URLs which, in combination with aggressive
		  Expires headers, can drastically speed up load times of sites.

		  See djblets.util.context_processors and
		  djblets.util.misc.generate_cache_serials.

	* djblets.webapi:
		* Set the mime type for JSON responses to application/json,
		  except when responding to an upload, in which case text/plain
		  is used.

		* Fixed a bug where WebAPIResponse._get_content was called too
		  frequently and in some cases generated a 500 error.
